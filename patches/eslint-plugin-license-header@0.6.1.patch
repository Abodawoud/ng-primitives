diff --git a/lib/rules/header.js b/lib/rules/header.js
index 5e35f5dacc0818128598f12b243df265b634113a..12bcc4f640e218deec3f4f5bdf7f0a625664f0ab 100644
--- a/lib/rules/header.js
+++ b/lib/rules/header.js
@@ -180,23 +180,23 @@ module.exports = {
               );
             };
 
-            if (nLocStart - lLocEnd > 2) {
-              context.report({
-                node: licenseNode,
-                loc: licenseNode.loc.end,
-                message: 'Superfluous new lines after license header',
-                fix
-              });
-            }
-
-            if (nLocStart - lLocEnd < 2) {
-              context.report({
-                node: licenseNode,
-                loc: licenseNode.loc.end,
-                message: 'Missing new line after license header',
-                fix
-              });
-            }
+            // if (nLocStart - lLocEnd > 2) {
+            //   context.report({
+            //     node: licenseNode,
+            //     loc: licenseNode.loc.end,
+            //     message: 'Superfluous new lines after license header',
+            //     fix
+            //   });
+            // }
+
+            // if (nLocStart - lLocEnd < 2) {
+            //   context.report({
+            //     node: licenseNode,
+            //     loc: licenseNode.loc.end,
+            //     message: 'Missing new line after license header',
+            //     fix
+            //   });
+            // }
           }
 
 
@@ -211,36 +211,36 @@ module.exports = {
               );
             };
 
-            if (lLocStart - nLocEnd > 2) {
-              context.report({
-                node: licenseNode,
-                loc: licenseNode.loc.start,
-                message: 'Superfluous new lines before license header',
-                fix
-              });
-            }
-
-            if (lLocStart - nLocEnd < 2) {
-              context.report({
-                node: licenseNode,
-                loc: licenseNode.loc.start,
-                message: 'Missing new line before license header',
-                fix
-              });
-            }
+            // if (lLocStart - nLocEnd > 2) {
+            //   context.report({
+            //     node: licenseNode,
+            //     loc: licenseNode.loc.start,
+            //     message: 'Superfluous new lines before license header',
+            //     fix
+            //   });
+            // }
+
+            // if (lLocStart - nLocEnd < 2) {
+            //   context.report({
+            //     node: licenseNode,
+            //     loc: licenseNode.loc.start,
+            //     message: 'Missing new line before license header',
+            //     fix
+            //   });
+            // }
           } else {
             const lLocStart = licenseNode.loc.start.line;
 
-            if (lLocStart !== 1) {
-              context.report({
-                node: licenseNode,
-                loc: licenseNode.loc.start,
-                message: 'Superfluous new lines before license header',
-                fix: function(fixer) {
-                  return fixer.replaceTextRange([ 0, licenseNode.range[0] ], '');
-                }
-              });
-            }
+            // if (lLocStart !== 1) {
+            //   context.report({
+            //     node: licenseNode,
+            //     loc: licenseNode.loc.start,
+            //     message: 'Superfluous new lines before license header',
+            //     fix: function(fixer) {
+            //       return fixer.replaceTextRange([ 0, licenseNode.range[0] ], '');
+            //     }
+            //   });
+            // }
           }
         } else {
           const shebang = comments.find(isShebang);
